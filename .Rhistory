install.packages("Rfacebook")
library("Rfacebook", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages("FactoMineR")
install.packages("png")
install.packages("stringr")
getwd()
setwd("Exercises/Exerciseset1")
getwd()
ProjectData <- read.csv(file = "data/Boats.csv", header = TRUE, sep=";")
ProjectData <- read.csv(file = "../../coursesessions/session1/data/Boats.csv", header = TRUE, sep=";")
getwd()
View(ProjectData)
ncol(ProjectData)
colnames(ProjectData)
rownames(ProjectData)
mean(ProjectData[,2])
ProjectData[16,]
mean(ProjectData,[,2])
mean(ProjectData[,2])
sd(ProjectData[,2])
quantile(ProjectData[,2],0.5)
quantile(ProjectData[,2],0.9)
?quantile
hist(ProjectData[,2], main = "The second column", xlab = "Ratings", ylab = "Respondents")
print(round(cor(tmp),2))
tmp = ProjectData[,2:10]
print(round(cor(tmp),2))
colnames(tmp) <- 2:10
print(round(cor(tmp),2))
colnames(ProjectData)[2:9]
mean(ProjectData[,6])
mean(ProjectData[,14])
mean(ProjectData[,4])
colnames(ProjectData)
my answer to this is 'r mean(ProjectData[,4])'
my answer to this is 'r mean(ProjectData[,4])'
my answer to this is "r mean(ProjectData[,4])"
my answer to this is `r mean(ProjectData[,4])`
my answer to this is `r mean(ProjectData[,4])`
getwd()
setwd(../../)
setwd(..\..\)
getwd()
source("helpersSet1.R")
source("dataSet1.R")
getwd()
setwd("Exercises/Exerciseset1/")
getwd()
list.files()
source("helpersSet1.R")
source("dataSet1.R")
install.packages("PerformanceAnalytics")
? class(StockReturns)
help StockReturns
StockReturns
?StockReturns
?dim
dim(StockReturns)
dim(StockReturns)
?nrow
nrow(StockReturns)
ncol(StockReturns)
load("~/Documents/Insead/INSEADAnalytics/Exercises/Exerciseset1/DataSet1.Rdata")
ncol(StockReturns)
nrow(StockReturns)
dim(StockReturns)
StockReturns[1:4,]
StockReturns[1:4,1]
StockReturns[1:4,2]
StockReturns[1:4,],4
head(StockReturns,5)
?head
tail(StockReturns,5)
?apply
We can also transpose the matrix of returns to create a new "horizontal" matrix. Let's call this matrix (variable name) transposedData. We can do so using this command:  `transposedData = t(StockReturns)`.
```{r eval = TRUE, echo=TRUE, comment=NA, warning=FALSE, message=FALSE,results='asis'}
```{r eval = TRUE, echo=TRUE, comment=NA, warning=FALSE, message=FALSE,results='asis'}
sum(myData != StockReturns[1:20,])
rsum(myData != StockReturns[1:20,])
sum(myData != StockReturns[1:20,])
```{r eval = TRUE, echo=TRUE, comment=NA, warning=FALSE, message=FALSE,results='asis'}
```{r eval = TRUE, echo=TRUE, comment=NA, warning=FALSE, message=FALSE,results='asis'}
```{r eval = TRUE, echo=TRUE, comment=NA, warning=FALSE, message=FALSE,results='asis'}
write.csv(StockReturns[1:20,c("SPY","AAPL")], file = "twentydays.csv", row.names = TRUE, col.names = TRUE)
```
Do not get surpsised if you see the csv file in your directories suddenly! You can then read the data from the csv file using the read.csv command. For example, this will load the data from the csv file and save it in a new variable that now is called "myData":
```{r eval = TRUE, echo=TRUE, comment=NA, warning=FALSE, message=FALSE,results='asis'}
write.csv(StockReturns[1:20,c("SPY","AAPL")], file = "twentydays.csv", row.names = TRUE, col.names = TRUE)
getwd()
setwd("Exercises/Exerciseset2/")
setwd("../../Exercises/Exerciseset2/")
getwd()
install.packages("Quandl")
getwd()
getwd()
setwd("Exercises/Exerciseset2/")
getwd()
getwd()
setwd("Exercises/Exerciseset2/")
getwd()
setwd("../../Exercises/Exerciseset1/")
getwd()
```{r eval = TRUE, echo=TRUE, comment=NA, warning=FALSE, message=FALSE, results='asis'}
install.packages("timeDate")
```{r eval = TRUE, echo=TRUE, comment=NA, warning=FALSE, message=FALSE,results='asis'}
write.csv(StockReturns[1:20,c("SPY","AAPL")], file = "twentydays.csv", row.names = TRUE, col.names = TRUE)
```{r eval = TRUE, echo=TRUE, comment=NA, warning=FALSE, message=FALSE, results='asis'}
myData <- read.csv(file = "twentydays.csv", header = TRUE, sep=";")
sum(myData != StockReturns[1:20,])
class(StockReturns)
```{r eval = FALSE, echo=TRUE}
myData + StockReturns[1:40,])
```
1. Once you write and read the data as described above, what happens when you run this command in the console of the RStudio: `sum(myData != StockReturns[1:20,])`
2. *(Extra exercise)* What do you think will happen if you now run this command, and why:
```{r eval = TRUE, echo=TRUE, comment=NA, warning=FALSE, message=FALSE,results='asis'}
write.csv(StockReturns[1:20,c("SPY","AAPL")], file = "twentydays.csv", row.names = TRUE, col.names = TRUE)
```
Do not get surpsised if you see the csv file in your directories suddenly! You can then read the data from the csv file using the read.csv command. For example, this will load the data from the csv file and save it in a new variable that now is called "myData":
```{r eval = TRUE, echo=TRUE, comment=NA, warning=FALSE, message=FALSE, results='asis'}
myData <- read.csv(file = "twentydays.csv", header = TRUE, sep=";")
```
Try it!
#### Questions
1. Once you write and read the data as described above, what happens when you run this command in the console of the RStudio: `sum(myData != StockReturns[1:20,])`
2. *(Extra exercise)* What do you think will happen if you now run this command, and why:
```{r eval = FALSE, echo=TRUE}
myData + StockReturns[1:40,])
setwd("../../Exercises/Exerciseset1/")
getwd()
setwd("../../Exercises/Exerciseset2/")
getwd()
Variance_Explained_Table_results<-PCA(futures_data, graph=FALSE)
Variance_Explained_Table_results<-PCA(futures_data, graph=FALSE)
crisis_data = futures_data[as.Date(rownames(futures_data)) > “2007-10-01” & as.Date(rownames(futures_data)) < “2009-03-01”, ])
crisis_data = futures_data[as.Date(rownames(futures_data)) > "2007-10-01" & as.Date(rownames(futures_data)) < "2009-03-01", ])
crisis_data = futures_data[as.Date(rownames(futures_data)) > "2007-10-01" & as.Date(rownames(futures_data)) < "2009-03-01", ]
crisis_data = futures_data[as.Date(rownames(futures_data)) > "2007-10-01" & as.Date(rownames(futures_data)) < "2009-03-01", ]
crisis_data = futures_data[as.Date(rownames(futures_data)) > "2007-10-01" & as.Date(rownames(futures_data)) < "2009-03-01", ]
crisis_data = futures_data[as.Date(rownames(futures_data)) > "2007-10-01" & as.Date(rownames(futures_data)) < "2009-03-01", ]
crisis_data = futures_data[as.Date(rownames(futures_data)) > "2007-10-01" & as.Date(rownames(futures_data)) < "2009-03-01", ]
